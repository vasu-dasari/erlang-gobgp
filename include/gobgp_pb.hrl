%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 3.26.4

-ifndef(gobgp_pb).
-define(gobgp_pb, true).

-define(gobgp_pb_gpb_version, "3.26.4").

-ifndef('TABLEINFO_PB_H').
-define('TABLEINFO_PB_H', true).
-record('TableInfo',
        {type                   :: 'GLOBAL' | 'LOCAL' | 'ADJ_IN' | 'ADJ_OUT' | 'VRF' | integer() | undefined, % = 1, enum Resource
         name                   :: binary() | iolist() | undefined, % = 2
         family                 :: non_neg_integer() | undefined, % = 3, 32 bits
         num_destination        :: non_neg_integer() | undefined, % = 4, 32 bits
         num_path               :: non_neg_integer() | undefined, % = 5, 32 bits
         num_accepted           :: non_neg_integer() | undefined % = 6, 32 bits
        }).
-endif.

-ifndef('LOCALPREFACTION_PB_H').
-define('LOCALPREFACTION_PB_H', true).
-record('LocalPrefAction',
        {value                  :: non_neg_integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('GLOBAL_PB_H').
-define('GLOBAL_PB_H', true).
-record('Global',
        {as                     :: non_neg_integer() | undefined, % = 1, 32 bits
         router_id              :: binary() | iolist() | undefined, % = 2
         listen_port            :: integer() | undefined, % = 3, 32 bits
         listen_addresses = []  :: [binary() | iolist()], % = 4
         families = []          :: [non_neg_integer()], % = 5, 32 bits
         use_multiple_paths     :: boolean() | 0 | 1 | undefined % = 6
        }).
-endif.

-ifndef('MPGRACEFULRESTARTCONFIG_PB_H').
-define('MPGRACEFULRESTARTCONFIG_PB_H', true).
-record('MpGracefulRestartConfig',
        {enabled                :: boolean() | 0 | 1 | undefined % = 1
        }).
-endif.

-ifndef('ADDPATHSCONFIG_PB_H').
-define('ADDPATHSCONFIG_PB_H', true).
-record('AddPathsConfig',
        {'receive'              :: boolean() | 0 | 1 | undefined, % = 1
         send_max               :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('AFISAFICONFIG_PB_H').
-define('AFISAFICONFIG_PB_H', true).
-record('AfiSafiConfig',
        {family                 :: non_neg_integer() | undefined, % = 1, 32 bits
         enabled                :: boolean() | 0 | 1 | undefined % = 2
        }).
-endif.

-ifndef('RPKICONF_PB_H').
-define('RPKICONF_PB_H', true).
-record('RPKIConf',
        {address                :: binary() | iolist() | undefined, % = 1
         remote_port            :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('DELETEPOLICYASSIGNMENTRESPONSE_PB_H').
-define('DELETEPOLICYASSIGNMENTRESPONSE_PB_H', true).
-record('DeletePolicyAssignmentResponse',
        {
        }).
-endif.

-ifndef('ADDPOLICYASSIGNMENTRESPONSE_PB_H').
-define('ADDPOLICYASSIGNMENTRESPONSE_PB_H', true).
-record('AddPolicyAssignmentResponse',
        {
        }).
-endif.

-ifndef('DELETEDEFINEDSETRESPONSE_PB_H').
-define('DELETEDEFINEDSETRESPONSE_PB_H', true).
-record('DeleteDefinedSetResponse',
        {
        }).
-endif.

-ifndef('ADDDEFINEDSETRESPONSE_PB_H').
-define('ADDDEFINEDSETRESPONSE_PB_H', true).
-record('AddDefinedSetResponse',
        {
        }).
-endif.

-ifndef('DELETERPKIRESPONSE_PB_H').
-define('DELETERPKIRESPONSE_PB_H', true).
-record('DeleteRpkiResponse',
        {
        }).
-endif.

-ifndef('ADDRPKIRESPONSE_PB_H').
-define('ADDRPKIRESPONSE_PB_H', true).
-record('AddRpkiResponse',
        {
        }).
-endif.

-ifndef('DELETEPATHRESPONSE_PB_H').
-define('DELETEPATHRESPONSE_PB_H', true).
-record('DeletePathResponse',
        {
        }).
-endif.

-ifndef('ADDPATHRESPONSE_PB_H').
-define('ADDPATHRESPONSE_PB_H', true).
-record('AddPathResponse',
        {uuid                   :: binary() | undefined % = 1
        }).
-endif.

-ifndef('DELETESTATEMENTRESPONSE_PB_H').
-define('DELETESTATEMENTRESPONSE_PB_H', true).
-record('DeleteStatementResponse',
        {
        }).
-endif.

-ifndef('DISABLERPKIRESPONSE_PB_H').
-define('DISABLERPKIRESPONSE_PB_H', true).
-record('DisableRpkiResponse',
        {
        }).
-endif.

-ifndef('SOFTRESETNEIGHBORRESPONSE_PB_H').
-define('SOFTRESETNEIGHBORRESPONSE_PB_H', true).
-record('SoftResetNeighborResponse',
        {
        }).
-endif.

-ifndef('ENABLERPKIRESPONSE_PB_H').
-define('ENABLERPKIRESPONSE_PB_H', true).
-record('EnableRpkiResponse',
        {
        }).
-endif.

-ifndef('COMMUNITYACTION_PB_H').
-define('COMMUNITYACTION_PB_H', true).
-record('CommunityAction',
        {type                   :: 'COMMUNITY_ADD' | 'COMMUNITY_REMOVE' | 'COMMUNITY_REPLACE' | integer() | undefined, % = 1, enum CommunityActionType
         communities = []       :: [binary() | iolist()] % = 2
        }).
-endif.

-ifndef('NEXTHOPACTION_PB_H').
-define('NEXTHOPACTION_PB_H', true).
-record('NexthopAction',
        {address                :: binary() | iolist() | undefined, % = 1
         self                   :: boolean() | 0 | 1 | undefined % = 2
        }).
-endif.

-ifndef('ASPREPENDACTION_PB_H').
-define('ASPREPENDACTION_PB_H', true).
-record('AsPrependAction',
        {asn                    :: non_neg_integer() | undefined, % = 1, 32 bits
         repeat                 :: non_neg_integer() | undefined, % = 2, 32 bits
         use_left_most          :: boolean() | 0 | 1 | undefined % = 3
        }).
-endif.

-ifndef('MEDACTION_PB_H').
-define('MEDACTION_PB_H', true).
-record('MedAction',
        {type                   :: 'MED_MOD' | 'MED_REPLACE' | integer() | undefined, % = 1, enum MedActionType
         value                  :: integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('ACTIONS_PB_H').
-define('ACTIONS_PB_H', true).
-record('Actions',
        {route_action           :: 'NONE' | 'ACCEPT' | 'REJECT' | integer() | undefined, % = 1, enum RouteAction
         community              :: #'CommunityAction'{} | undefined, % = 2
         med                    :: #'MedAction'{} | undefined, % = 3
         as_prepend             :: #'AsPrependAction'{} | undefined, % = 4
         ext_community          :: #'CommunityAction'{} | undefined, % = 5
         nexthop                :: #'NexthopAction'{} | undefined, % = 6
         local_pref             :: #'LocalPrefAction'{} | undefined, % = 7
         large_community        :: #'CommunityAction'{} | undefined % = 8
        }).
-endif.

-ifndef('MATCHSET_PB_H').
-define('MATCHSET_PB_H', true).
-record('MatchSet',
        {type                   :: 'ANY' | 'ALL' | 'INVERT' | integer() | undefined, % = 1, enum MatchType
         name                   :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('ASPATHLENGTH_PB_H').
-define('ASPATHLENGTH_PB_H', true).
-record('AsPathLength',
        {type                   :: 'EQ' | 'GE' | 'LE' | integer() | undefined, % = 1, enum AsPathLengthType
         length                 :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('CONDITIONS_PB_H').
-define('CONDITIONS_PB_H', true).
-record('Conditions',
        {prefix_set             :: #'MatchSet'{} | undefined, % = 1
         neighbor_set           :: #'MatchSet'{} | undefined, % = 2
         as_path_length         :: #'AsPathLength'{} | undefined, % = 3
         as_path_set            :: #'MatchSet'{} | undefined, % = 4
         community_set          :: #'MatchSet'{} | undefined, % = 5
         ext_community_set      :: #'MatchSet'{} | undefined, % = 6
         rpki_result            :: integer() | undefined, % = 7, 32 bits
         route_type             :: 'ROUTE_TYPE_NONE' | 'ROUTE_TYPE_INTERNAL' | 'ROUTE_TYPE_EXTERNAL' | 'ROUTE_TYPE_LOCAL' | integer() | undefined, % = 8, enum Conditions.RouteType
         large_community_set    :: #'MatchSet'{} | undefined % = 9
        }).
-endif.

-ifndef('STATEMENT_PB_H').
-define('STATEMENT_PB_H', true).
-record('Statement',
        {name                   :: binary() | iolist() | undefined, % = 1
         conditions             :: #'Conditions'{} | undefined, % = 2
         actions                :: #'Actions'{} | undefined % = 3
        }).
-endif.

-ifndef('POLICY_PB_H').
-define('POLICY_PB_H', true).
-record('Policy',
        {name                   :: binary() | iolist() | undefined, % = 1
         statements = []        :: [#'Statement'{}] % = 2
        }).
-endif.

-ifndef('POLICYASSIGNMENT_PB_H').
-define('POLICYASSIGNMENT_PB_H', true).
-record('PolicyAssignment',
        {type                   :: 'IN' | 'IMPORT' | 'EXPORT' | integer() | undefined, % = 1, enum PolicyType
         resource               :: 'GLOBAL' | 'LOCAL' | 'ADJ_IN' | 'ADJ_OUT' | 'VRF' | integer() | undefined, % = 2, enum Resource
         name                   :: binary() | iolist() | undefined, % = 3
         policies = []          :: [#'Policy'{}],   % = 4
         default                :: 'NONE' | 'ACCEPT' | 'REJECT' | integer() | undefined % = 5, enum RouteAction
        }).
-endif.

-ifndef('DELETEPOLICYASSIGNMENTREQUEST_PB_H').
-define('DELETEPOLICYASSIGNMENTREQUEST_PB_H', true).
-record('DeletePolicyAssignmentRequest',
        {assignment             :: #'PolicyAssignment'{} | undefined, % = 1
         all                    :: boolean() | 0 | 1 | undefined % = 2
        }).
-endif.

-ifndef('ADDSTATEMENTREQUEST_PB_H').
-define('ADDSTATEMENTREQUEST_PB_H', true).
-record('AddStatementRequest',
        {statement              :: #'Statement'{} | undefined % = 1
        }).
-endif.

-ifndef('GETSTATEMENTREQUEST_PB_H').
-define('GETSTATEMENTREQUEST_PB_H', true).
-record('GetStatementRequest',
        {
        }).
-endif.

-ifndef('DISABLENEIGHBORREQUEST_PB_H').
-define('DISABLENEIGHBORREQUEST_PB_H', true).
-record('DisableNeighborRequest',
        {address                :: binary() | iolist() | undefined, % = 1
         communication          :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('ADDBMPREQUEST_PB_H').
-define('ADDBMPREQUEST_PB_H', true).
-record('AddBmpRequest',
        {address                :: binary() | iolist() | undefined, % = 1
         port                   :: non_neg_integer() | undefined, % = 2, 32 bits
         type                   :: 'PRE' | 'POST' | 'BOTH' | 'LOCAL' | 'ALL' | integer() | undefined % = 3, enum AddBmpRequest.MonitoringPolicy
        }).
-endif.

-ifndef('ROA_PB_H').
-define('ROA_PB_H', true).
-record('Roa',
        {as                     :: non_neg_integer() | undefined, % = 1, 32 bits
         prefixlen              :: non_neg_integer() | undefined, % = 2, 32 bits
         maxlen                 :: non_neg_integer() | undefined, % = 3, 32 bits
         prefix                 :: binary() | iolist() | undefined, % = 4
         conf                   :: #'RPKIConf'{} | undefined % = 5
        }).
-endif.

-ifndef('RPKIVALIDATION_PB_H').
-define('RPKIVALIDATION_PB_H', true).
-record('RPKIValidation',
        {state                  :: 'STATE_NONE' | 'STATE_NOT_FOUND' | 'STATE_VALID' | 'STATE_INVALID' | integer() | undefined, % = 1, enum RPKIValidation.State
         reason                 :: 'REASOT_NONE' | 'REASON_AS' | 'REASON_LENGTH' | integer() | undefined, % = 2, enum RPKIValidation.Reason
         matched = []           :: [#'Roa'{}],      % = 3
         unmatched_as = []      :: [#'Roa'{}],      % = 4
         unmatched_length = []  :: [#'Roa'{}]       % = 5
        }).
-endif.

-ifndef('PATH_PB_H').
-define('PATH_PB_H', true).
-record('Path',
        {nlri                   :: binary() | undefined, % = 1
         pattrs = []            :: [binary()],      % = 2
         age                    :: integer() | undefined, % = 3, 32 bits
         best                   :: boolean() | 0 | 1 | undefined, % = 4
         is_withdraw            :: boolean() | 0 | 1 | undefined, % = 5
         validation             :: integer() | undefined, % = 6, 32 bits
         validation_detail      :: #'RPKIValidation'{} | undefined, % = 7
         no_implicit_withdraw   :: boolean() | 0 | 1 | undefined, % = 8
         family                 :: non_neg_integer() | undefined, % = 9, 32 bits
         source_asn             :: non_neg_integer() | undefined, % = 10, 32 bits
         source_id              :: binary() | iolist() | undefined, % = 11
         filtered               :: boolean() | 0 | 1 | undefined, % = 12
         stale                  :: boolean() | 0 | 1 | undefined, % = 13
         is_from_external       :: boolean() | 0 | 1 | undefined, % = 14
         neighbor_ip            :: binary() | iolist() | undefined, % = 15
         uuid                   :: binary() | undefined, % = 16
         is_nexthop_invalid     :: boolean() | 0 | 1 | undefined, % = 17
         identifier             :: non_neg_integer() | undefined, % = 18, 32 bits
         local_identifier       :: non_neg_integer() | undefined % = 19, 32 bits
        }).
-endif.

-ifndef('DELETEPATHREQUEST_PB_H').
-define('DELETEPATHREQUEST_PB_H', true).
-record('DeletePathRequest',
        {resource               :: 'GLOBAL' | 'LOCAL' | 'ADJ_IN' | 'ADJ_OUT' | 'VRF' | integer() | undefined, % = 1, enum Resource
         vrf_id                 :: binary() | iolist() | undefined, % = 2
         family                 :: non_neg_integer() | undefined, % = 3, 32 bits
         path                   :: #'Path'{} | undefined, % = 4
         uuid                   :: binary() | undefined % = 5
        }).
-endif.

-ifndef('VALIDATERIBREQUEST_PB_H').
-define('VALIDATERIBREQUEST_PB_H', true).
-record('ValidateRibRequest',
        {type                   :: 'GLOBAL' | 'LOCAL' | 'ADJ_IN' | 'ADJ_OUT' | 'VRF' | integer() | undefined, % = 1, enum Resource
         family                 :: non_neg_integer() | undefined, % = 2, 32 bits
         prefix                 :: binary() | iolist() | undefined % = 3
        }).
-endif.

-ifndef('PREFIX_PB_H').
-define('PREFIX_PB_H', true).
-record('Prefix',
        {ip_prefix              :: binary() | iolist() | undefined, % = 1
         mask_length_min        :: non_neg_integer() | undefined, % = 2, 32 bits
         mask_length_max        :: non_neg_integer() | undefined % = 3, 32 bits
        }).
-endif.

-ifndef('DEFINEDSET_PB_H').
-define('DEFINEDSET_PB_H', true).
-record('DefinedSet',
        {type                   :: 'PREFIX' | 'NEIGHBOR' | 'TAG' | 'AS_PATH' | 'COMMUNITY' | 'EXT_COMMUNITY' | 'LARGE_COMMUNITY' | integer() | undefined, % = 1, enum DefinedType
         name                   :: binary() | iolist() | undefined, % = 2
         list = []              :: [binary() | iolist()], % = 3
         prefixes = []          :: [#'Prefix'{}]    % = 4
        }).
-endif.

-ifndef('DELETEDEFINEDSETREQUEST_PB_H').
-define('DELETEDEFINEDSETREQUEST_PB_H', true).
-record('DeleteDefinedSetRequest',
        {set                    :: #'DefinedSet'{} | undefined, % = 1
         all                    :: boolean() | 0 | 1 | undefined % = 2
        }).
-endif.

-ifndef('SOFTRESETRPKIREQUEST_PB_H').
-define('SOFTRESETRPKIREQUEST_PB_H', true).
-record('SoftResetRpkiRequest',
        {address                :: binary() | iolist() | undefined % = 1
        }).
-endif.

-ifndef('LONGLIVEDGRACEFULRESTARTSTATE_PB_H').
-define('LONGLIVEDGRACEFULRESTARTSTATE_PB_H', true).
-record('LongLivedGracefulRestartState',
        {enabled                :: boolean() | 0 | 1 | undefined, % = 1
         received               :: boolean() | 0 | 1 | undefined, % = 2
         advertised             :: boolean() | 0 | 1 | undefined, % = 3
         peer_restart_time      :: non_neg_integer() | undefined, % = 4, 32 bits
         peer_restart_timer_expired :: boolean() | 0 | 1 | undefined % = 5
        }).
-endif.

-ifndef('LONGLIVEDGRACEFULRESTARTCONFIG_PB_H').
-define('LONGLIVEDGRACEFULRESTARTCONFIG_PB_H', true).
-record('LongLivedGracefulRestartConfig',
        {enabled                :: boolean() | 0 | 1 | undefined, % = 1
         restart_time           :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('LONGLIVEDGRACEFULRESTART_PB_H').
-define('LONGLIVEDGRACEFULRESTART_PB_H', true).
-record('LongLivedGracefulRestart',
        {config                 :: #'LongLivedGracefulRestartConfig'{} | undefined, % = 1
         state                  :: #'LongLivedGracefulRestartState'{} | undefined % = 2
        }).
-endif.

-ifndef('VRF_PB_H').
-define('VRF_PB_H', true).
-record('Vrf',
        {name                   :: binary() | iolist() | undefined, % = 1
         rd                     :: binary() | undefined, % = 2
         import_rt = []         :: [binary()],      % = 3
         export_rt = []         :: [binary()],      % = 4
         id                     :: non_neg_integer() | undefined % = 5, 32 bits
        }).
-endif.

-ifndef('DELETEVRFREQUEST_PB_H').
-define('DELETEVRFREQUEST_PB_H', true).
-record('DeleteVrfRequest',
        {vrf                    :: #'Vrf'{} | undefined % = 1
        }).
-endif.

-ifndef('ADDRPKIREQUEST_PB_H').
-define('ADDRPKIREQUEST_PB_H', true).
-record('AddRpkiRequest',
        {address                :: binary() | iolist() | undefined, % = 1
         port                   :: non_neg_integer() | undefined, % = 2, 32 bits
         lifetime               :: integer() | undefined % = 3, 32 bits
        }).
-endif.

-ifndef('INJECTMRTREQUEST_PB_H').
-define('INJECTMRTREQUEST_PB_H', true).
-record('InjectMrtRequest',
        {resource               :: 'GLOBAL' | 'LOCAL' | 'ADJ_IN' | 'ADJ_OUT' | 'VRF' | integer() | undefined, % = 1, enum Resource
         vrf_id                 :: binary() | iolist() | undefined, % = 2
         paths = []             :: [#'Path'{}]      % = 3
        }).
-endif.

-ifndef('MESSAGE_PB_H').
-define('MESSAGE_PB_H', true).
-record('Message',
        {'NOTIFICATION'         :: non_neg_integer() | undefined, % = 1, 32 bits
         'UPDATE'               :: non_neg_integer() | undefined, % = 2, 32 bits
         'OPEN'                 :: non_neg_integer() | undefined, % = 3, 32 bits
         'KEEPALIVE'            :: non_neg_integer() | undefined, % = 4, 32 bits
         'REFRESH'              :: non_neg_integer() | undefined, % = 5, 32 bits
         'DISCARDED'            :: non_neg_integer() | undefined, % = 6, 32 bits
         'TOTAL'                :: non_neg_integer() | undefined % = 7, 32 bits
        }).
-endif.

-ifndef('MESSAGES_PB_H').
-define('MESSAGES_PB_H', true).
-record('Messages',
        {received               :: #'Message'{} | undefined, % = 1
         sent                   :: #'Message'{} | undefined % = 2
        }).
-endif.

-ifndef('ARGUMENTS_PB_H').
-define('ARGUMENTS_PB_H', true).
-record('Arguments',
        {resource               :: 'GLOBAL' | 'LOCAL' | 'ADJ_IN' | 'ADJ_OUT' | 'VRF' | integer() | undefined, % = 1, enum Resource
         family                 :: non_neg_integer() | undefined, % = 2, 32 bits
         name                   :: binary() | iolist() | undefined % = 3
        }).
-endif.

-ifndef('EBGPMULTIHOP_PB_H').
-define('EBGPMULTIHOP_PB_H', true).
-record('EbgpMultihop',
        {enabled                :: boolean() | 0 | 1 | undefined, % = 1
         multihop_ttl           :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('DESTINATION_PB_H').
-define('DESTINATION_PB_H', true).
-record('Destination',
        {prefix                 :: binary() | iolist() | undefined, % = 1
         paths = []             :: [#'Path'{}],     % = 2
         longer_prefixes        :: boolean() | 0 | 1 | undefined, % = 3
         shorter_prefixes       :: boolean() | 0 | 1 | undefined % = 4
        }).
-endif.

-ifndef('TABLELOOKUPPREFIX_PB_H').
-define('TABLELOOKUPPREFIX_PB_H', true).
-record('TableLookupPrefix',
        {prefix                 :: binary() | iolist() | undefined, % = 1
         lookup_option          :: 'LOOKUP_EXACT' | 'LOOKUP_LONGER' | 'LOOKUP_SHORTER' | integer() | undefined % = 2, enum TableLookupOption
        }).
-endif.

-ifndef('TIMERSCONFIG_PB_H').
-define('TIMERSCONFIG_PB_H', true).
-record('TimersConfig',
        {connect_retry          :: non_neg_integer() | undefined, % = 1, 32 bits
         hold_time              :: non_neg_integer() | undefined, % = 2, 32 bits
         keepalive_interval     :: non_neg_integer() | undefined, % = 3, 32 bits
         minimum_advertisement_interval :: non_neg_integer() | undefined % = 4, 32 bits
        }).
-endif.

-ifndef('ROUTETARGETMEMBERSHIPCONFIG_PB_H').
-define('ROUTETARGETMEMBERSHIPCONFIG_PB_H', true).
-record('RouteTargetMembershipConfig',
        {deferral_time          :: non_neg_integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('PREFIXLIMIT_PB_H').
-define('PREFIXLIMIT_PB_H', true).
-record('PrefixLimit',
        {family                 :: non_neg_integer() | undefined, % = 1, 32 bits
         max_prefixes           :: non_neg_integer() | undefined, % = 2, 32 bits
         shutdown_threshold_pct :: non_neg_integer() | undefined % = 3, 32 bits
        }).
-endif.

-ifndef('PEERCONF_PB_H').
-define('PEERCONF_PB_H', true).
-record('PeerConf',
        {auth_password          :: binary() | iolist() | undefined, % = 1
         description            :: binary() | iolist() | undefined, % = 2
         local_as               :: non_neg_integer() | undefined, % = 3, 32 bits
         neighbor_address       :: binary() | iolist() | undefined, % = 4
         peer_as                :: non_neg_integer() | undefined, % = 5, 32 bits
         peer_group             :: binary() | iolist() | undefined, % = 6
         peer_type              :: non_neg_integer() | undefined, % = 7, 32 bits
         remove_private_as      :: 'NONE' | 'ALL' | 'REPLACE' | integer() | undefined, % = 8, enum PeerConf.RemovePrivateAs
         route_flap_damping     :: boolean() | 0 | 1 | undefined, % = 9
         send_community         :: non_neg_integer() | undefined, % = 10, 32 bits
         remote_cap = []        :: [binary()],      % = 11
         local_cap = []         :: [binary()],      % = 12
         id                     :: binary() | iolist() | undefined, % = 13
         prefix_limits = []     :: [#'PrefixLimit'{}], % = 14
         local_address          :: binary() | iolist() | undefined, % = 15
         neighbor_interface     :: binary() | iolist() | undefined, % = 16
         vrf                    :: binary() | iolist() | undefined, % = 17
         allow_own_as           :: non_neg_integer() | undefined, % = 18, 32 bits
         replace_peer_as        :: boolean() | 0 | 1 | undefined % = 19
        }).
-endif.

-ifndef('GETRIBINFORESPONSE_PB_H').
-define('GETRIBINFORESPONSE_PB_H', true).
-record('GetRibInfoResponse',
        {info                   :: #'TableInfo'{} | undefined % = 1
        }).
-endif.

-ifndef('ENABLEZEBRARESPONSE_PB_H').
-define('ENABLEZEBRARESPONSE_PB_H', true).
-record('EnableZebraResponse',
        {
        }).
-endif.

-ifndef('RPKISTATE_PB_H').
-define('RPKISTATE_PB_H', true).
-record('RPKIState',
        {uptime                 :: integer() | undefined, % = 1, 32 bits
         downtime               :: integer() | undefined, % = 2, 32 bits
         up                     :: boolean() | 0 | 1 | undefined, % = 3
         record_ipv4            :: non_neg_integer() | undefined, % = 4, 32 bits
         record_ipv6            :: non_neg_integer() | undefined, % = 5, 32 bits
         prefix_ipv4            :: non_neg_integer() | undefined, % = 6, 32 bits
         prefix_ipv6            :: non_neg_integer() | undefined, % = 7, 32 bits
         serial                 :: non_neg_integer() | undefined, % = 8, 32 bits
         received_ipv4          :: integer() | undefined, % = 9, 32 bits
         received_ipv6          :: integer() | undefined, % = 10, 32 bits
         serial_notify          :: integer() | undefined, % = 11, 32 bits
         cache_reset            :: integer() | undefined, % = 12, 32 bits
         cache_response         :: integer() | undefined, % = 13, 32 bits
         end_of_data            :: integer() | undefined, % = 14, 32 bits
         error                  :: integer() | undefined, % = 15, 32 bits
         serial_query           :: integer() | undefined, % = 16, 32 bits
         reset_query            :: integer() | undefined % = 17, 32 bits
        }).
-endif.

-ifndef('REPLACEPOLICYRESPONSE_PB_H').
-define('REPLACEPOLICYRESPONSE_PB_H', true).
-record('ReplacePolicyResponse',
        {
        }).
-endif.

-ifndef('INJECTMRTRESPONSE_PB_H').
-define('INJECTMRTRESPONSE_PB_H', true).
-record('InjectMrtResponse',
        {
        }).
-endif.

-ifndef('ADDNEIGHBORRESPONSE_PB_H').
-define('ADDNEIGHBORRESPONSE_PB_H', true).
-record('AddNeighborResponse',
        {
        }).
-endif.

-ifndef('ADDPATHSSTATE_PB_H').
-define('ADDPATHSSTATE_PB_H', true).
-record('AddPathsState',
        {'receive'              :: boolean() | 0 | 1 | undefined, % = 1
         send_max               :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('ADDPATHS_PB_H').
-define('ADDPATHS_PB_H', true).
-record('AddPaths',
        {config                 :: #'AddPathsConfig'{} | undefined, % = 1
         state                  :: #'AddPathsState'{} | undefined % = 2
        }).
-endif.

-ifndef('ROUTETARGETMEMBERSHIPSTATE_PB_H').
-define('ROUTETARGETMEMBERSHIPSTATE_PB_H', true).
-record('RouteTargetMembershipState',
        {deferral_time          :: non_neg_integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('ROUTETARGETMEMBERSHIP_PB_H').
-define('ROUTETARGETMEMBERSHIP_PB_H', true).
-record('RouteTargetMembership',
        {config                 :: #'RouteTargetMembershipConfig'{} | undefined, % = 1
         state                  :: #'RouteTargetMembershipState'{} | undefined % = 2
        }).
-endif.

-ifndef('IBGPSTATE_PB_H').
-define('IBGPSTATE_PB_H', true).
-record('IbgpState',
        {maximum_paths          :: non_neg_integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('IBGPCONFIG_PB_H').
-define('IBGPCONFIG_PB_H', true).
-record('IbgpConfig',
        {maximum_paths          :: non_neg_integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('IBGP_PB_H').
-define('IBGP_PB_H', true).
-record('Ibgp',
        {config                 :: #'IbgpConfig'{} | undefined, % = 1
         state                  :: #'IbgpState'{} | undefined % = 2
        }).
-endif.

-ifndef('EBGPSTATE_PB_H').
-define('EBGPSTATE_PB_H', true).
-record('EbgpState',
        {allow_multiple_as      :: boolean() | 0 | 1 | undefined, % = 1
         maximum_paths          :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('EBGPCONFIG_PB_H').
-define('EBGPCONFIG_PB_H', true).
-record('EbgpConfig',
        {allow_multiple_as      :: boolean() | 0 | 1 | undefined, % = 1
         maximum_paths          :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('EBGP_PB_H').
-define('EBGP_PB_H', true).
-record('Ebgp',
        {config                 :: #'EbgpConfig'{} | undefined, % = 1
         state                  :: #'EbgpState'{} | undefined % = 2
        }).
-endif.

-ifndef('USEMULTIPLEPATHSSTATE_PB_H').
-define('USEMULTIPLEPATHSSTATE_PB_H', true).
-record('UseMultiplePathsState',
        {enabled                :: boolean() | 0 | 1 | undefined % = 1
        }).
-endif.

-ifndef('USEMULTIPLEPATHSCONFIG_PB_H').
-define('USEMULTIPLEPATHSCONFIG_PB_H', true).
-record('UseMultiplePathsConfig',
        {enabled                :: boolean() | 0 | 1 | undefined % = 1
        }).
-endif.

-ifndef('USEMULTIPLEPATHS_PB_H').
-define('USEMULTIPLEPATHS_PB_H', true).
-record('UseMultiplePaths',
        {config                 :: #'UseMultiplePathsConfig'{} | undefined, % = 1
         state                  :: #'UseMultiplePathsState'{} | undefined, % = 2
         ebgp                   :: #'Ebgp'{} | undefined, % = 3
         ibgp                   :: #'Ibgp'{} | undefined % = 4
        }).
-endif.

-ifndef('ROUTESELECTIONOPTIONSSTATE_PB_H').
-define('ROUTESELECTIONOPTIONSSTATE_PB_H', true).
-record('RouteSelectionOptionsState',
        {always_compare_med     :: boolean() | 0 | 1 | undefined, % = 1
         ignore_as_path_length  :: boolean() | 0 | 1 | undefined, % = 2
         external_compare_router_id :: boolean() | 0 | 1 | undefined, % = 3
         advertise_inactive_routes :: boolean() | 0 | 1 | undefined, % = 4
         enable_aigp            :: boolean() | 0 | 1 | undefined, % = 5
         ignore_next_hop_igp_metric :: boolean() | 0 | 1 | undefined % = 6
        }).
-endif.

-ifndef('ROUTESELECTIONOPTIONSCONFIG_PB_H').
-define('ROUTESELECTIONOPTIONSCONFIG_PB_H', true).
-record('RouteSelectionOptionsConfig',
        {always_compare_med     :: boolean() | 0 | 1 | undefined, % = 1
         ignore_as_path_length  :: boolean() | 0 | 1 | undefined, % = 2
         external_compare_router_id :: boolean() | 0 | 1 | undefined, % = 3
         advertise_inactive_routes :: boolean() | 0 | 1 | undefined, % = 4
         enable_aigp            :: boolean() | 0 | 1 | undefined, % = 5
         ignore_next_hop_igp_metric :: boolean() | 0 | 1 | undefined % = 6
        }).
-endif.

-ifndef('ROUTESELECTIONOPTIONS_PB_H').
-define('ROUTESELECTIONOPTIONS_PB_H', true).
-record('RouteSelectionOptions',
        {config                 :: #'RouteSelectionOptionsConfig'{} | undefined, % = 1
         state                  :: #'RouteSelectionOptionsState'{} | undefined % = 2
        }).
-endif.

-ifndef('APPLYPOLICY_PB_H').
-define('APPLYPOLICY_PB_H', true).
-record('ApplyPolicy',
        {in_policy              :: #'PolicyAssignment'{} | undefined, % = 1
         export_policy          :: #'PolicyAssignment'{} | undefined, % = 2
         import_policy          :: #'PolicyAssignment'{} | undefined % = 3
        }).
-endif.

-ifndef('MPGRACEFULRESTARTSTATE_PB_H').
-define('MPGRACEFULRESTARTSTATE_PB_H', true).
-record('MpGracefulRestartState',
        {enabled                :: boolean() | 0 | 1 | undefined, % = 1
         received               :: boolean() | 0 | 1 | undefined, % = 2
         advertised             :: boolean() | 0 | 1 | undefined, % = 3
         end_of_rib_received    :: boolean() | 0 | 1 | undefined, % = 4
         end_of_rib_sent        :: boolean() | 0 | 1 | undefined % = 5
        }).
-endif.

-ifndef('MPGRACEFULRESTART_PB_H').
-define('MPGRACEFULRESTART_PB_H', true).
-record('MpGracefulRestart',
        {config                 :: #'MpGracefulRestartConfig'{} | undefined, % = 1
         state                  :: #'MpGracefulRestartState'{} | undefined % = 2
        }).
-endif.

-ifndef('AFISAFI_PB_H').
-define('AFISAFI_PB_H', true).
-record('AfiSafi',
        {mp_graceful_restart    :: #'MpGracefulRestart'{} | undefined, % = 1
         config                 :: #'AfiSafiConfig'{} | undefined, % = 2
         apply_policy           :: #'ApplyPolicy'{} | undefined, % = 3
         route_selection_options :: #'RouteSelectionOptions'{} | undefined, % = 4
         use_multiple_paths     :: #'UseMultiplePaths'{} | undefined, % = 5
         prefix_limits          :: #'PrefixLimit'{} | undefined, % = 6
         route_target_membership :: #'RouteTargetMembership'{} | undefined, % = 7
         long_lived_graceful_restart :: #'LongLivedGracefulRestart'{} | undefined, % = 8
         add_paths              :: #'AddPaths'{} | undefined % = 9
        }).
-endif.

-ifndef('GRACEFULRESTART_PB_H').
-define('GRACEFULRESTART_PB_H', true).
-record('GracefulRestart',
        {enabled                :: boolean() | 0 | 1 | undefined, % = 1
         restart_time           :: non_neg_integer() | undefined, % = 2, 32 bits
         helper_only            :: boolean() | 0 | 1 | undefined, % = 3
         deferral_time          :: non_neg_integer() | undefined, % = 4, 32 bits
         notification_enabled   :: boolean() | 0 | 1 | undefined, % = 5
         longlived_enabled      :: boolean() | 0 | 1 | undefined % = 6
        }).
-endif.

-ifndef('ROUTESERVER_PB_H').
-define('ROUTESERVER_PB_H', true).
-record('RouteServer',
        {route_server_client    :: boolean() | 0 | 1 | undefined % = 1
        }).
-endif.

-ifndef('TRANSPORT_PB_H').
-define('TRANSPORT_PB_H', true).
-record('Transport',
        {local_address          :: binary() | iolist() | undefined, % = 1
         local_port             :: non_neg_integer() | undefined, % = 2, 32 bits
         mtu_discovery          :: boolean() | 0 | 1 | undefined, % = 3
         passive_mode           :: boolean() | 0 | 1 | undefined, % = 4
         remote_address         :: binary() | iolist() | undefined, % = 5
         remote_port            :: non_neg_integer() | undefined, % = 6, 32 bits
         tcp_mss                :: non_neg_integer() | undefined % = 7, 32 bits
        }).
-endif.

-ifndef('TIMERSSTATE_PB_H').
-define('TIMERSSTATE_PB_H', true).
-record('TimersState',
        {connect_retry          :: non_neg_integer() | undefined, % = 1, 32 bits
         hold_time              :: non_neg_integer() | undefined, % = 2, 32 bits
         keepalive_interval     :: non_neg_integer() | undefined, % = 3, 32 bits
         minimum_advertisement_interval :: non_neg_integer() | undefined, % = 4, 32 bits
         negotiated_hold_time   :: non_neg_integer() | undefined, % = 5, 32 bits
         uptime                 :: non_neg_integer() | undefined, % = 6, 32 bits
         downtime               :: non_neg_integer() | undefined % = 7, 32 bits
        }).
-endif.

-ifndef('TIMERS_PB_H').
-define('TIMERS_PB_H', true).
-record('Timers',
        {config                 :: #'TimersConfig'{} | undefined, % = 1
         state                  :: #'TimersState'{} | undefined % = 2
        }).
-endif.

-ifndef('QUEUES_PB_H').
-define('QUEUES_PB_H', true).
-record('Queues',
        {input                  :: non_neg_integer() | undefined, % = 1, 32 bits
         output                 :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('PEERSTATE_PB_H').
-define('PEERSTATE_PB_H', true).
-record('PeerState',
        {auth_password          :: binary() | iolist() | undefined, % = 1
         description            :: binary() | iolist() | undefined, % = 2
         local_as               :: non_neg_integer() | undefined, % = 3, 32 bits
         messages               :: #'Messages'{} | undefined, % = 4
         neighbor_address       :: binary() | iolist() | undefined, % = 5
         peer_as                :: non_neg_integer() | undefined, % = 6, 32 bits
         peer_group             :: binary() | iolist() | undefined, % = 7
         peer_type              :: non_neg_integer() | undefined, % = 8, 32 bits
         queues                 :: #'Queues'{} | undefined, % = 9
         remove_private_as      :: non_neg_integer() | undefined, % = 10, 32 bits
         route_flap_damping     :: boolean() | 0 | 1 | undefined, % = 11
         send_community         :: non_neg_integer() | undefined, % = 12, 32 bits
         session_state          :: non_neg_integer() | undefined, % = 13, 32 bits
         supported_capabilities = [] :: [binary() | iolist()], % = 14
         bgp_state              :: binary() | iolist() | undefined, % = 15
         admin_state            :: 'UP' | 'DOWN' | 'PFX_CT' | integer() | undefined, % = 16, enum PeerState.AdminState
         received               :: non_neg_integer() | undefined, % = 17, 32 bits
         accepted               :: non_neg_integer() | undefined, % = 18, 32 bits
         advertised             :: non_neg_integer() | undefined, % = 19, 32 bits
         out_q                  :: non_neg_integer() | undefined, % = 20, 32 bits
         flops                  :: non_neg_integer() | undefined % = 21, 32 bits
        }).
-endif.

-ifndef('ROUTEREFLECTOR_PB_H').
-define('ROUTEREFLECTOR_PB_H', true).
-record('RouteReflector',
        {route_reflector_client :: boolean() | 0 | 1 | undefined, % = 1
         route_reflector_cluster_id :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('PEER_PB_H').
-define('PEER_PB_H', true).
-record('Peer',
        {families = []          :: [non_neg_integer()], % = 1, 32 bits
         apply_policy           :: #'ApplyPolicy'{} | undefined, % = 2
         conf                   :: #'PeerConf'{} | undefined, % = 3
         ebgp_multihop          :: #'EbgpMultihop'{} | undefined, % = 4
         route_reflector        :: #'RouteReflector'{} | undefined, % = 5
         info                   :: #'PeerState'{} | undefined, % = 6
         timers                 :: #'Timers'{} | undefined, % = 7
         transport              :: #'Transport'{} | undefined, % = 8
         route_server           :: #'RouteServer'{} | undefined, % = 9
         graceful_restart       :: #'GracefulRestart'{} | undefined, % = 10
         afi_safis = []         :: [#'AfiSafi'{}],  % = 11
         add_paths              :: #'AddPaths'{} | undefined % = 12
        }).
-endif.

-ifndef('GETNEIGHBORRESPONSE_PB_H').
-define('GETNEIGHBORRESPONSE_PB_H', true).
-record('GetNeighborResponse',
        {peers = []             :: [#'Peer'{}]      % = 1
        }).
-endif.

-ifndef('ADDPOLICYRESPONSE_PB_H').
-define('ADDPOLICYRESPONSE_PB_H', true).
-record('AddPolicyResponse',
        {
        }).
-endif.

-ifndef('GETPOLICYRESPONSE_PB_H').
-define('GETPOLICYRESPONSE_PB_H', true).
-record('GetPolicyResponse',
        {policies = []          :: [#'Policy'{}]    % = 1
        }).
-endif.

-ifndef('GETSTATEMENTRESPONSE_PB_H').
-define('GETSTATEMENTRESPONSE_PB_H', true).
-record('GetStatementResponse',
        {statements = []        :: [#'Statement'{}] % = 1
        }).
-endif.

-ifndef('ADDVRFRESPONSE_PB_H').
-define('ADDVRFRESPONSE_PB_H', true).
-record('AddVrfResponse',
        {
        }).
-endif.

-ifndef('ADDBMPRESPONSE_PB_H').
-define('ADDBMPRESPONSE_PB_H', true).
-record('AddBmpResponse',
        {
        }).
-endif.

-ifndef('TABLE_PB_H').
-define('TABLE_PB_H', true).
-record('Table',
        {type                   :: 'GLOBAL' | 'LOCAL' | 'ADJ_IN' | 'ADJ_OUT' | 'VRF' | integer() | undefined, % = 1, enum Resource
         name                   :: binary() | iolist() | undefined, % = 2
         family                 :: non_neg_integer() | undefined, % = 3, 32 bits
         destinations = []      :: [#'Destination'{}], % = 4
         post_policy            :: boolean() | 0 | 1 | undefined % = 5
        }).
-endif.

-ifndef('RESETNEIGHBORRESPONSE_PB_H').
-define('RESETNEIGHBORRESPONSE_PB_H', true).
-record('ResetNeighborResponse',
        {
        }).
-endif.

-ifndef('GETPOLICYASSIGNMENTREQUEST_PB_H').
-define('GETPOLICYASSIGNMENTREQUEST_PB_H', true).
-record('GetPolicyAssignmentRequest',
        {assignment             :: #'PolicyAssignment'{} | undefined % = 1
        }).
-endif.

-ifndef('ENABLEZEBRAREQUEST_PB_H').
-define('ENABLEZEBRAREQUEST_PB_H', true).
-record('EnableZebraRequest',
        {url                    :: binary() | iolist() | undefined, % = 1
         route_types = []       :: [binary() | iolist()], % = 2
         version                :: non_neg_integer() | undefined, % = 3, 32 bits
         nexthop_trigger_enable :: boolean() | 0 | 1 | undefined, % = 4
         nexthop_trigger_delay  :: non_neg_integer() | undefined % = 5, 32 bits
        }).
-endif.

-ifndef('SOFTRESETNEIGHBORREQUEST_PB_H').
-define('SOFTRESETNEIGHBORREQUEST_PB_H', true).
-record('SoftResetNeighborRequest',
        {address                :: binary() | iolist() | undefined, % = 1
         direction              :: 'IN' | 'OUT' | 'BOTH' | integer() | undefined % = 2, enum SoftResetNeighborRequest.SoftResetDirection
        }).
-endif.

-ifndef('RESETNEIGHBORREQUEST_PB_H').
-define('RESETNEIGHBORREQUEST_PB_H', true).
-record('ResetNeighborRequest',
        {address                :: binary() | iolist() | undefined, % = 1
         communication          :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('GETPATHREQUEST_PB_H').
-define('GETPATHREQUEST_PB_H', true).
-record('GetPathRequest',
        {type                   :: 'GLOBAL' | 'LOCAL' | 'ADJ_IN' | 'ADJ_OUT' | 'VRF' | integer() | undefined, % = 1, enum Resource
         name                   :: binary() | iolist() | undefined, % = 2
         family                 :: non_neg_integer() | undefined, % = 3, 32 bits
         prefixes = []          :: [#'TableLookupPrefix'{}] % = 4
        }).
-endif.

-ifndef('DELETEPOLICYREQUEST_PB_H').
-define('DELETEPOLICYREQUEST_PB_H', true).
-record('DeletePolicyRequest',
        {policy                 :: #'Policy'{} | undefined, % = 1
         preserve_statements    :: boolean() | 0 | 1 | undefined, % = 2
         all                    :: boolean() | 0 | 1 | undefined % = 3
        }).
-endif.

-ifndef('REPLACEDEFINEDSETREQUEST_PB_H').
-define('REPLACEDEFINEDSETREQUEST_PB_H', true).
-record('ReplaceDefinedSetRequest',
        {set                    :: #'DefinedSet'{} | undefined % = 1
        }).
-endif.

-ifndef('ADDDEFINEDSETREQUEST_PB_H').
-define('ADDDEFINEDSETREQUEST_PB_H', true).
-record('AddDefinedSetRequest',
        {set                    :: #'DefinedSet'{} | undefined % = 1
        }).
-endif.

-ifndef('DELETENEIGHBORREQUEST_PB_H').
-define('DELETENEIGHBORREQUEST_PB_H', true).
-record('DeleteNeighborRequest',
        {peer                   :: #'Peer'{} | undefined % = 1
        }).
-endif.

-ifndef('GETRIBINFOREQUEST_PB_H').
-define('GETRIBINFOREQUEST_PB_H', true).
-record('GetRibInfoRequest',
        {info                   :: #'TableInfo'{} | undefined % = 1
        }).
-endif.

-ifndef('REPLACEPOLICYREQUEST_PB_H').
-define('REPLACEPOLICYREQUEST_PB_H', true).
-record('ReplacePolicyRequest',
        {policy                 :: #'Policy'{} | undefined, % = 1
         refer_existing_statements :: boolean() | 0 | 1 | undefined, % = 2
         preserve_statements    :: boolean() | 0 | 1 | undefined % = 3
        }).
-endif.

-ifndef('ADDNEIGHBORREQUEST_PB_H').
-define('ADDNEIGHBORREQUEST_PB_H', true).
-record('AddNeighborRequest',
        {peer                   :: #'Peer'{} | undefined % = 1
        }).
-endif.

-ifndef('GETNEIGHBORREQUEST_PB_H').
-define('GETNEIGHBORREQUEST_PB_H', true).
-record('GetNeighborRequest',
        {enableAdvertised       :: boolean() | 0 | 1 | undefined, % = 1
         address                :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('ENABLENEIGHBORREQUEST_PB_H').
-define('ENABLENEIGHBORREQUEST_PB_H', true).
-record('EnableNeighborRequest',
        {address                :: binary() | iolist() | undefined % = 1
        }).
-endif.

-ifndef('RPKI_PB_H').
-define('RPKI_PB_H', true).
-record('Rpki',
        {conf                   :: #'RPKIConf'{} | undefined, % = 1
         state                  :: #'RPKIState'{} | undefined % = 2
        }).
-endif.

-ifndef('AFISAFISTATE_PB_H').
-define('AFISAFISTATE_PB_H', true).
-record('AfiSafiState',
        {family                 :: non_neg_integer() | undefined, % = 1, 32 bits
         enabled                :: boolean() | 0 | 1 | undefined, % = 2
         total_paths            :: non_neg_integer() | undefined, % = 3, 32 bits
         total_prefixes         :: non_neg_integer() | undefined % = 4, 32 bits
        }).
-endif.

-ifndef('STARTSERVERRESPONSE_PB_H').
-define('STARTSERVERRESPONSE_PB_H', true).
-record('StartServerResponse',
        {
        }).
-endif.

-ifndef('REPLACEPOLICYASSIGNMENTRESPONSE_PB_H').
-define('REPLACEPOLICYASSIGNMENTRESPONSE_PB_H', true).
-record('ReplacePolicyAssignmentResponse',
        {
        }).
-endif.

-ifndef('GETPOLICYASSIGNMENTRESPONSE_PB_H').
-define('GETPOLICYASSIGNMENTRESPONSE_PB_H', true).
-record('GetPolicyAssignmentResponse',
        {assignment             :: #'PolicyAssignment'{} | undefined % = 1
        }).
-endif.

-ifndef('DELETEVRFRESPONSE_PB_H').
-define('DELETEVRFRESPONSE_PB_H', true).
-record('DeleteVrfResponse',
        {
        }).
-endif.

-ifndef('RESETRPKIRESPONSE_PB_H').
-define('RESETRPKIRESPONSE_PB_H', true).
-record('ResetRpkiResponse',
        {
        }).
-endif.

-ifndef('GETRPKIRESPONSE_PB_H').
-define('GETRPKIRESPONSE_PB_H', true).
-record('GetRpkiResponse',
        {servers = []           :: [#'Rpki'{}]      % = 1
        }).
-endif.

-ifndef('DELETEBMPRESPONSE_PB_H').
-define('DELETEBMPRESPONSE_PB_H', true).
-record('DeleteBmpResponse',
        {
        }).
-endif.

-ifndef('REPLACEDEFINEDSETRESPONSE_PB_H').
-define('REPLACEDEFINEDSETRESPONSE_PB_H', true).
-record('ReplaceDefinedSetResponse',
        {
        }).
-endif.

-ifndef('GETDEFINEDSETRESPONSE_PB_H').
-define('GETDEFINEDSETRESPONSE_PB_H', true).
-record('GetDefinedSetResponse',
        {sets = []              :: [#'DefinedSet'{}] % = 1
        }).
-endif.

-ifndef('DISABLENEIGHBORRESPONSE_PB_H').
-define('DISABLENEIGHBORRESPONSE_PB_H', true).
-record('DisableNeighborResponse',
        {
        }).
-endif.

-ifndef('ENABLENEIGHBORRESPONSE_PB_H').
-define('ENABLENEIGHBORRESPONSE_PB_H', true).
-record('EnableNeighborResponse',
        {
        }).
-endif.

-ifndef('SHUTDOWNNEIGHBORRESPONSE_PB_H').
-define('SHUTDOWNNEIGHBORRESPONSE_PB_H', true).
-record('ShutdownNeighborResponse',
        {
        }).
-endif.

-ifndef('ADDPOLICYREQUEST_PB_H').
-define('ADDPOLICYREQUEST_PB_H', true).
-record('AddPolicyRequest',
        {policy                 :: #'Policy'{} | undefined, % = 1
         refer_existing_statements :: boolean() | 0 | 1 | undefined % = 2
        }).
-endif.

-ifndef('GETPOLICYREQUEST_PB_H').
-define('GETPOLICYREQUEST_PB_H', true).
-record('GetPolicyRequest',
        {
        }).
-endif.

-ifndef('RESETRPKIREQUEST_PB_H').
-define('RESETRPKIREQUEST_PB_H', true).
-record('ResetRpkiRequest',
        {address                :: binary() | iolist() | undefined % = 1
        }).
-endif.

-ifndef('DISABLERPKIREQUEST_PB_H').
-define('DISABLERPKIREQUEST_PB_H', true).
-record('DisableRpkiRequest',
        {address                :: binary() | iolist() | undefined % = 1
        }).
-endif.

-ifndef('ENABLERPKIREQUEST_PB_H').
-define('ENABLERPKIREQUEST_PB_H', true).
-record('EnableRpkiRequest',
        {address                :: binary() | iolist() | undefined % = 1
        }).
-endif.

-ifndef('MONITORRIBREQUEST_PB_H').
-define('MONITORRIBREQUEST_PB_H', true).
-record('MonitorRibRequest',
        {table                  :: #'Table'{} | undefined, % = 1
         current                :: boolean() | 0 | 1 | undefined % = 2
        }).
-endif.

-ifndef('DELETEBMPREQUEST_PB_H').
-define('DELETEBMPREQUEST_PB_H', true).
-record('DeleteBmpRequest',
        {address                :: binary() | iolist() | undefined, % = 1
         port                   :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('GETRIBREQUEST_PB_H').
-define('GETRIBREQUEST_PB_H', true).
-record('GetRibRequest',
        {table                  :: #'Table'{} | undefined % = 1
        }).
-endif.

-ifndef('REPLACESTATEMENTREQUEST_PB_H').
-define('REPLACESTATEMENTREQUEST_PB_H', true).
-record('ReplaceStatementRequest',
        {statement              :: #'Statement'{} | undefined % = 1
        }).
-endif.

-ifndef('DELETESTATEMENTREQUEST_PB_H').
-define('DELETESTATEMENTREQUEST_PB_H', true).
-record('DeleteStatementRequest',
        {statement              :: #'Statement'{} | undefined, % = 1
         all                    :: boolean() | 0 | 1 | undefined % = 2
        }).
-endif.

-ifndef('GETRPKIREQUEST_PB_H').
-define('GETRPKIREQUEST_PB_H', true).
-record('GetRpkiRequest',
        {family                 :: non_neg_integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('ADDVRFREQUEST_PB_H').
-define('ADDVRFREQUEST_PB_H', true).
-record('AddVrfRequest',
        {vrf                    :: #'Vrf'{} | undefined % = 1
        }).
-endif.

-ifndef('GETVRFREQUEST_PB_H').
-define('GETVRFREQUEST_PB_H', true).
-record('GetVrfRequest',
        {
        }).
-endif.

-ifndef('GETROARESPONSE_PB_H').
-define('GETROARESPONSE_PB_H', true).
-record('GetRoaResponse',
        {roas = []              :: [#'Roa'{}]       % = 1
        }).
-endif.

-ifndef('VALIDATERIBRESPONSE_PB_H').
-define('VALIDATERIBRESPONSE_PB_H', true).
-record('ValidateRibResponse',
        {
        }).
-endif.

-ifndef('GETRIBRESPONSE_PB_H').
-define('GETRIBRESPONSE_PB_H', true).
-record('GetRibResponse',
        {table                  :: #'Table'{} | undefined % = 1
        }).
-endif.

-ifndef('DELETEPOLICYRESPONSE_PB_H').
-define('DELETEPOLICYRESPONSE_PB_H', true).
-record('DeletePolicyResponse',
        {
        }).
-endif.

-ifndef('REPLACESTATEMENTRESPONSE_PB_H').
-define('REPLACESTATEMENTRESPONSE_PB_H', true).
-record('ReplaceStatementResponse',
        {
        }).
-endif.

-ifndef('ADDSTATEMENTRESPONSE_PB_H').
-define('ADDSTATEMENTRESPONSE_PB_H', true).
-record('AddStatementResponse',
        {
        }).
-endif.

-ifndef('GETVRFRESPONSE_PB_H').
-define('GETVRFRESPONSE_PB_H', true).
-record('GetVrfResponse',
        {vrfs = []              :: [#'Vrf'{}]       % = 1
        }).
-endif.

-ifndef('DELETENEIGHBORRESPONSE_PB_H').
-define('DELETENEIGHBORRESPONSE_PB_H', true).
-record('DeleteNeighborResponse',
        {
        }).
-endif.

-ifndef('STOPSERVERRESPONSE_PB_H').
-define('STOPSERVERRESPONSE_PB_H', true).
-record('StopServerResponse',
        {
        }).
-endif.

-ifndef('GETSERVERRESPONSE_PB_H').
-define('GETSERVERRESPONSE_PB_H', true).
-record('GetServerResponse',
        {global                 :: #'Global'{} | undefined % = 1
        }).
-endif.

-ifndef('SOFTRESETRPKIRESPONSE_PB_H').
-define('SOFTRESETRPKIRESPONSE_PB_H', true).
-record('SoftResetRpkiResponse',
        {
        }).
-endif.

-ifndef('DISABLEMRTRESPONSE_PB_H').
-define('DISABLEMRTRESPONSE_PB_H', true).
-record('DisableMrtResponse',
        {
        }).
-endif.

-ifndef('ENABLEMRTRESPONSE_PB_H').
-define('ENABLEMRTRESPONSE_PB_H', true).
-record('EnableMrtResponse',
        {
        }).
-endif.

-ifndef('SHUTDOWNNEIGHBORREQUEST_PB_H').
-define('SHUTDOWNNEIGHBORREQUEST_PB_H', true).
-record('ShutdownNeighborRequest',
        {address                :: binary() | iolist() | undefined, % = 1
         communication          :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('GETROAREQUEST_PB_H').
-define('GETROAREQUEST_PB_H', true).
-record('GetRoaRequest',
        {family                 :: non_neg_integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('STOPSERVERREQUEST_PB_H').
-define('STOPSERVERREQUEST_PB_H', true).
-record('StopServerRequest',
        {
        }).
-endif.

-ifndef('DELETERPKIREQUEST_PB_H').
-define('DELETERPKIREQUEST_PB_H', true).
-record('DeleteRpkiRequest',
        {address                :: binary() | iolist() | undefined, % = 1
         port                   :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('STARTSERVERREQUEST_PB_H').
-define('STARTSERVERREQUEST_PB_H', true).
-record('StartServerRequest',
        {global                 :: #'Global'{} | undefined % = 1
        }).
-endif.

-ifndef('GETSERVERREQUEST_PB_H').
-define('GETSERVERREQUEST_PB_H', true).
-record('GetServerRequest',
        {
        }).
-endif.

-ifndef('REPLACEPOLICYASSIGNMENTREQUEST_PB_H').
-define('REPLACEPOLICYASSIGNMENTREQUEST_PB_H', true).
-record('ReplacePolicyAssignmentRequest',
        {assignment             :: #'PolicyAssignment'{} | undefined % = 1
        }).
-endif.

-ifndef('ADDPOLICYASSIGNMENTREQUEST_PB_H').
-define('ADDPOLICYASSIGNMENTREQUEST_PB_H', true).
-record('AddPolicyAssignmentRequest',
        {assignment             :: #'PolicyAssignment'{} | undefined % = 1
        }).
-endif.

-ifndef('DISABLEMRTREQUEST_PB_H').
-define('DISABLEMRTREQUEST_PB_H', true).
-record('DisableMrtRequest',
        {
        }).
-endif.

-ifndef('ENABLEMRTREQUEST_PB_H').
-define('ENABLEMRTREQUEST_PB_H', true).
-record('EnableMrtRequest',
        {dump_type              :: integer() | undefined, % = 1, 32 bits
         filename               :: binary() | iolist() | undefined, % = 2
         interval               :: non_neg_integer() | undefined % = 3, 32 bits
        }).
-endif.

-ifndef('GETDEFINEDSETREQUEST_PB_H').
-define('GETDEFINEDSETREQUEST_PB_H', true).
-record('GetDefinedSetRequest',
        {type                   :: 'PREFIX' | 'NEIGHBOR' | 'TAG' | 'AS_PATH' | 'COMMUNITY' | 'EXT_COMMUNITY' | 'LARGE_COMMUNITY' | integer() | undefined, % = 1, enum DefinedType
         name                   :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('ADDPATHREQUEST_PB_H').
-define('ADDPATHREQUEST_PB_H', true).
-record('AddPathRequest',
        {resource               :: 'GLOBAL' | 'LOCAL' | 'ADJ_IN' | 'ADJ_OUT' | 'VRF' | integer() | undefined, % = 1, enum Resource
         vrf_id                 :: binary() | iolist() | undefined, % = 2
         path                   :: #'Path'{} | undefined % = 3
        }).
-endif.

-endif.
